{
	// Use IntelliSense to learn about possible attributes.
	// Hover to view descriptions of existing attributes.
	// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
	"version": "0.2.0",
	"configurations": [
		{
			"type": "node-terminal",
			"request": "launch",
			"name": "Launch Program",
			"skipFiles": [
				"<node_internals>/**"
			],
			"command": "npm start",
			"preLaunchTask": "typescript build",
			"outFiles": [
				"${workspaceFolder}/dist/**/*.js"
			],
			"env": {
				"AWS_REGION":     "eu-west-1",
				"AWS_ENDPOINT":   "http://localhost:8000",
				"STAGE":          "lcl",
				"NODE_LOG_LEVEL": "debug",
				"AUTH_URI":       "http://localhost:3013/sso",
			}
		},
		{
			"name": "ESLint",
			"type": "node",
			"request": "launch",
			"program": "${workspaceFolder}/node_modules/eslint/bin/eslint",
			"args": [
				"--config=${workspaceFolder}/eslint.config.mjs",
				//"${workspaceFolder}/src/**/*.ts",
				//"${workspaceFolder}/src/**/*.tsx",
				//"${workspaceFolder}/test/**/*.spec.ts",
				//"${workspaceFolder}/test/**/*.spec.tsx",
				//"--debug",
			],
			"env": {
			},
			"skipFiles": [
				"<node_internals>/**"
			],
			"outputCapture": "std"
		},
		{
			"name": "Unit Tests",
			"type": "node",
			"request": "launch",
			"skipFiles": [
				"<node_internals>/**"
			],
			"program": "${workspaceFolder}/node_modules/.bin/jest",
			//"runtimeVersion": "22.14.0",
			"outFiles": ["${workspaceFolder}/test-out/**/*.js"],
			"env": {
				"NODE_OPTIONS":  "--experimental-vm-modules --no-warnings=ExperimentalWarnings", // Node options required for jest to work with ts-node
				"NODE_ENV":       "test-unit",
				"NODE_LOG_LEVEL": "off",
				//"TS_NODE_PROJECT": "./tsconfig-unittest.json",
			},
			"args": [
				"--config=./test/unit/.jest/jest.config.ts",
				//"--testPathPatterns=./test/unit/.*.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_browser_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_db_dynamodb_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_date_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_http_utils_priv.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_http_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_db_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_edit_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_fields.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_filter_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_title_utils.spec.ts",
				"--testPathPatterns=./test/unit/utils/gip_program_edit_input.spec.ts",
			],
			"outputCapture": "std",
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Code Coverage",
			"program": "${workspaceFolder}/node_modules/.bin/jest",
			//"runtimeVersion": "22.14.0",
			"env": {
				"NODE_OPTIONS":  "--experimental-vm-modules --no-warnings=ExperimentalWarnings", // Node options required for jest to work with ts-node
				"NODE_ENV":       "test-unit",
				"NODE_LOG_LEVEL": "off",
				//"TS_NODE_PROJECT": "./tsconfig-unittest.json",
			},
			"args": [
				"--config=./test/unit/.jest/jest.config.ts",
				"--collect-coverage",
				//"--testPathPatterns=./test/unit/utils/gip_browser_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_date_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_db_dynamodb_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_http_utils_priv.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_http_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_db_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_edit_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_fields.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_filter_utils.spec.ts",
				//"--testPathPatterns=./test/unit/utils/gip_prog_title_utils.spec.ts",
				"--testPathPatterns=./test/unit/utils/gip_program_edit_input.spec.ts",
			],
			"outputCapture": "std",
		},
		{
			"type": "node",
			"request": "launch",
			"name": "API System Test",
			"skipFiles": [
				"<node_internals>/**"
			],
			"program": "${workspaceFolder}/test/system/api/gip_db_dynamodb_utils.spec.js",
			"preLaunchTask": "tsc: build - tsconfig-systemtest.json",
			"outFiles": ["${workspaceFolder}/test-out/**/*.js"],
			"env": {
				"AWS_REGION":       "eu-west-1",
				"AWS_ENDPOINT":     "http://localhost:8000",
				"STAGE":            "dev",
				"GIP_MAX_PROGRAMS": "20",
			}
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Create Tables",
			"program": "${workspaceFolder}/test/dynamodb/dynCreateTables",
			"args": [
				"--exec"
			]
		},
		{
			"type": "node",
			"request": "launch",
			"name": "Delete Tables",
			"program": "${workspaceFolder}/test/dynamodb/dynDeleteTables",
			"args": [
				"--exec"
			]
		},
		{
			"type": "node-terminal",
			"request": "launch",
			"name": "Deploy",
			"skipFiles": [
				"<node_internals>/**"
			],
			"command": "npx sls deploy",
			"preLaunchTask": "tsc: build - tsconfig.json",
			"outFiles": [
				"${workspaceFolder}/dist/**/*.js"
			],
			"env": {
				"AWS_REGION":     "eu-west-1",
				"STAGE":          "dev",
				"NODE_LOG_LEVEL": "info"
			}
		},
		{
			"type": "node-terminal",
			"name": "Clean",
			"request": "launch",
			"preLaunchTask": "clean",
			"command": "exit",
		},
	]
}
